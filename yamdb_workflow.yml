name: yamdb_final

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort pytest
        cd api_yamdb/
        pip install -r requirements.txt
        cd ..

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        cd api_yamdb/
        python manage.py test

      
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1  

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./api_yamdb
        push: true
        no-cache: true
        tags: danilovkzn/infra_sp2:latest

  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ROOT: ~/yamdb_final
    needs: build_and_push_to_docker_hub
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: copy config files for docker end nginx via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        target: ${{ env.PROJECT_ROOT }}
        source: 'infra/docker-compose.yaml, infra/nginx/default.conf, api_yamdb/static'

    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker pull danilovkzn/infra_sp2:latest
          sudo docker-compose stop
          sudo docker-compose rm web
          sudo systemctl stop nginx
          cd yamdb_final/
          cd infra/
          sudo rm .env
          sudo touch .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo SER_YANDEX=${{ secrets.SER_YANDEX }} >> .env
          sudo docker-compose up -d
  # Учёт. Приходите завтра.
  #send_message:
    # runs-on: ubuntu-latest
    # needs: deploy
    # steps:
    # - name: send message
    #   uses: appleboy/telegram-action@master
    #   with:
    #     to: ${{ secrets.TELEGRAM_TO }}
    #     token: ${{ secrets.TELEGRAM_TOKEN }}
    #     message: Ну что, Животное, твой ${{ github.workflow }} успешно выполнен!^)
